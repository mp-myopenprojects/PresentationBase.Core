# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Debug'

jobs:
- job: Build
  displayName: Build
  timeoutInMinutes: 30
  steps:
  - task: NuGetToolInstaller@1
  - task: NuGetCommand@2
    inputs:
      restoreSolution: '$(solution)'
  - task: VSBuild@1
    inputs:
      solution: '$(solution)'
      platform: '$(buildPlatform)'
      configuration: '$(buildConfiguration)'
      maximumCpuCount: true
      msbuildArchitecture: 'x64'
  - task: DotNetCoreCLI@2
    inputs:
      command: 'pack'
      packagesToPack: '$(Build.SourcesDirectory)\Core\Core.csproj'
      nobuild: true
      buildProperties: 'PackageVersion=1.0.0-ci+$(Build.SourceVersion)'
  
- job: Test
  displayName: 'Test'
  timeoutInMinutes: 30
  steps:
  - task: VSTest@2
    inputs:
      testSelector: 'testAssemblies'
      testAssemblyVer2: '$(Build.SourcesDirectory)\Core.Tests\bin\$(buildConfiguration)\**\PresentationBase.Core.Tests.dll'
      searchFolder: '$(System.DefaultWorkingDirectory)'
      runTestsInIsolation: true
      codeCoverageEnabled: true
      platform: '$(buildPlatform)'
      configuration: '$(buildConfiguration)'

- job: PublishAssemblies
  displayName: 'Publish assemblies'
  timeoutInMinutes: 30
  steps:
  - task: PublishPipelineArtifact@1
    inputs:
      targetPath: '$(Build.SourcesDirectory)\Core\bin\$(buildConfiguration)'
      artifact: 'Assemblies ($(buildConfiguration))'
      publishLocation: 'pipeline'

- job: PublishNuGet
  displayName: 'Publish NuGet package'
  timeoutInMinutes: 30
  steps:
  - task: PublishPipelineArtifact@1
    inputs:
      targetPath: '$(Build.ArtifactStagingDirectory)'
      artifact: 'NuGet packages ($(buildConfiguration))'
      publishLocation: 'pipeline'
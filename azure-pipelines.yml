# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
- master

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Debug'

jobs:
- job: BuildTestPublish
  displayName: 'Build, test & publish'
  timeoutInMinutes: 30
  pool:
    vmImage: 'windows-latest'
  steps:

  - task: NuGetToolInstaller@1

  - task: NuGetCommand@2
    inputs:
      restoreSolution: '$(solution)'

  - task: VSBuild@1
    inputs:
      solution: '$(solution)'
      platform: '$(buildPlatform)'
      configuration: '$(buildConfiguration)'
      maximumCpuCount: true
      msbuildArchitecture: 'x64'

  - task: VSTest@2
    inputs:
      testSelector: 'testAssemblies'
      testAssemblyVer2: '$(Build.SourcesDirectory)\Core.Tests\bin\$(buildConfiguration)\**\PresentationBase.Core.Tests.dll'
      searchFolder: '$(System.DefaultWorkingDirectory)'
      runTestsInIsolation: true
      codeCoverageEnabled: true
      platform: '$(buildPlatform)'
      configuration: '$(buildConfiguration)'

  - task: PublishPipelineArtifact@1
    inputs:
      targetPath: '$(Build.SourcesDirectory)\Core\bin\$(buildConfiguration)'
      artifact: 'PresentationBase.Core debug build ($(Build.SourceVersion))'
      publishLocation: 'pipeline'
      
  - task: DotNetCoreCLI@2
    inputs:
      command: 'pack'
      packagesToPack: '$(Build.SourcesDirectory)\Core\Core.csproj'
      packDirectory: '$(Build.ArtifactStagingDirectory)\nuget'
      nobuild: true
      includesymbols: true
      includesource: true
      versioningScheme: 'off'
      buildProperties: '--version-suffix alpha'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)\nuget'
      ArtifactName: 'PresentationBase.Core debug NuGet package ($(Build.SourceVersion))'
      publishLocation: 'Container'